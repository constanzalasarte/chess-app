/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package edu.austral.dissis.chess

import edu.austral.dissis.chess.chess.ClassicGame
import edu.austral.dissis.chess.chess.boarderReader.BoarderReader
import edu.austral.dissis.chess.chess.createValidationEngine.ClassicEngine
import edu.austral.dissis.chess.gui.*
import javafx.application.Application
import javafx.application.Application.launch
import javafx.scene.Scene
import javafx.stage.Stage


fun main() {
    launch(ChessGameApplication::class.java)
}

class ChessGameApplication : Application() {
    private val boarderReader = BoarderReader()
    private val checkmatePieces = boarderReader.boarderReader("/home/constanza/projects/facu/system_design/chess-app/app/src/main/kotlin/edu/austral/dissis/chess/checkmate.txt", ClassicEngine())
//    private val pieces = boarderReader.boarderReader("/home/constanza/projects/facu/system_design/chess-app/app/src/main/kotlin/edu/austral/dissis/chess/beginning", ClassicEngine())
    private val adapter = ClassicGame(checkmatePieces, PlayerColor.BLACK, 8)
    private val imageResolver = CachedImageResolver(DefaultImageResolver())

    companion object {
        const val GameTitle = "Chess"
    }

    override fun start(primaryStage: Stage) {
        primaryStage.title = GameTitle

        val root = GameView(adapter, imageResolver)
        primaryStage.scene = Scene(root)

        primaryStage.show()
    }
}